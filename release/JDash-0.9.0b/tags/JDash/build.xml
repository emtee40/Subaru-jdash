<!-- =======================================
 This is the JDash ANT build file.  
 The following list defines the set of common build targets.
 
 all = Build everything up to the JAR file, and put it into the RTE dir.
 compile = Compile sources ONLY
 jar = Build the JAR file
 rte = Build the RTE. This is the same as "all"
 javadoc = Build the javadoc files
 launch = Launch the application
 launch-config = Launch the config application
 clean = clean up all build files
 release = create a release zip file named JDash-x.x.x.zip

============================================ -->

<project default="all" name="JDash">
	
	<!-- Init -->
	<target name="init">
		<property name="projectName" value="JDash"/>
		<property name="izhome" value="/opt/izpack"/>
		<property name="sourceDir" value="src" />
		<property name="outputDir" value="build" />
		<property name="rteDir" value="rte" />
		<property name="docDir" value="doc" />
		<property name="manifest" value="manifest.txt"/>
		<property name="JDashJar" value="${projectName}.jar"/>
		<property name="jar01" value="RXTXcomm.jar"/>
		<property name="jar02" value="js.jar"/>
		<property name="jar03" value="jdom.jar"/>
		<property name="jar04" value="junit.jar"/>
		<property name="jar05" value="jcckit.jar"/>
		<property name="jar06" value="jl1.0.jar"/>
		<property name="jar07" value="SuperWaba.jar"/>
		<property name="jar08" value="h2.jar"/>
		<property name="jar09" value="msv.jar"/>
		<property name="jar10" value="isorelax.jar"/>
		<property name="jar11" value="relaxngDatatype.jar"/>
		<property name="jar12" value="xsdlib.jar"/>
		<property name="classpath"
			  value="${rteDir}/${jar01}:${rteDir}/${jar02}:${rteDir}/${jar03}:${rteDir}/${jar04}:${rteDir}/${jar05}:${rteDir}/${jar06}:${rteDir}/${jar07}:${rteDir}/${jar08}:${rteDir}/${jar09}:${rteDir}/${jar10}:${rteDir}/${jar11}:${rteDir}/${jar12}:" />
		<mkdir dir="${outputDir}" />
		<echo message="CLASSPATH=${classpath}"/>
	</target>
	
	<!-- ALL -->
	<target name="all" depends="init,rte" description="Build all of JDash, but not the install or zip.">
		<echo message="JDash build complete"/>
	</target>
	
	<!-- Compile -->
	<target name="compile" depends="init">
		<echo message="Compiling JDash"/>
		<javac 
			srcdir="${sourceDir}" 
			destdir="${outputDir}" 
			classpath="${classpath}" 
			deprecation="true" 
			debug="true" 
			debuglevel="source,lines,vars"
		/>
		<copy todir="${outputDir}">
			<fileset dir="${sourceDir}">
				<exclude name="**/*.java"/>
				<exclude name="**/.svn"/>
			</fileset>
	    </copy>
	</target>
	
	<!-- Jar -->
	<target name="jar" depends="init,compile">
		<echo message="Creating JDash jar file"/>

		<echo message="Creating jar file..."/>
		<delete file="${manifest}" />
		<manifest file="${manifest}">
			<attribute name="Built-By" value="${user.name} (Copyright 2007)"/>
			<attribute name="Main-Class" value="net.sourceforge.JDash.Startup"/>
			<attribute name="Class-Path" value="${jar01} ${jar02} ${jar03} ${jar04} ${jar05} ${jar06} ${jar07} ${jar08} ${jar09} ${jar10} ${jar11} ${jar12}"/>
		</manifest>
		
		<jar destfile="${rteDir}/${JDashJar}"
		     basedir="${outputDir}"
		     includes="**/*"
		     manifest="${manifest}"
         	/>
		<delete file="${manifest}" />
	</target>
	
	<!-- RTE -->
	<target name="rte" depends="init,jar">
		<echo message="Creating JDash Runtime Environment"/>
		<copy file="${sourceDir}/net/sourceforge/JDash/icon.ico" tofile="${rteDir}/icon.ico"/>
		<copy file="${sourceDir}/net/sourceforge/JDash/icon.png" tofile="${rteDir}/icon.png"/>
		<copy file="${sourceDir}/net/sourceforge/JDash/config.png" tofile="${rteDir}/config.png"/>
		<copy file="${sourceDir}/net/sourceforge/JDash/config.ico" tofile="${rteDir}/config.ico"/>
	</target>
	
	<!-- java doc -->
	<target name="javadoc" depends="init">
		<javadoc packagenames="*"
			sourcepath="${sourceDir}"
			destdir="${docDir}/javadoc"
			classpath="${classpath}"
			author="true"
			version="true"
			windowtitle="${projectName} API"
			doctitle="${projectName}"
			header="${projectName} JavaDoc"
			overview="Overview"
			bottom="Copyright (c) 2006 Shane Powell under the LGPL License. All Rights Reserved."
    	/>
	</target>
	
	<!-- Build zip file -->
	<target name="release" depends="init,rte">
		<exec executable="java" dir="install">
			<arg line=" -cp standalone-compiler.jar" />
			<arg line=" -Dtools.jar=$JAVA_HOME/lib/tools.jar" />
			<arg line=" com.izforge.izpack.compiler.Compiler" />
			<arg line=" izpack_install.xml" />
			<arg line=" -b ../${rteDir} -o setup"/>
		</exec>

		<zip
		    destFile="JDash-x.x.x.zip"
		    basedir="./install"
		    includes="setup.jar install.txt"
		/>

		<delete file="install/setup.jar"/>

	</target>
	
	<!-- clean -->
	<target name="clean" depends="init">
		<echo message="Cleaning..." />
		<delete failonerror="no" dir="${outputDir}" />
		<delete failonerror="no" file="${rteDir}/${JDashJar}" />
	</target>
	
	<!-- Launch -->
	<target name="launch" depends="rte">
		<java jar="${rteDir}/${JDashJar}" fork="true" dir="${rteDir}/" failonerror="true"/>
	</target>

	<!-- Launch Config -->
	<target name="launch-config" depends="rte">
		<java jar="${rteDir}/${JDashJar}" fork="true" dir="${rteDir}/" failonerror="true">
			<arg line="-config"/>
		</java>
	</target>

	<!-- Launch JDash and enable the JMP Java memory profiler plugin -->
	<target name="launch-jmp" depends="rte">
		<java jar="${rteDir}/${JDashJar}" fork="true" dir="${rteDir}/" failonerror="true">
			<jvmarg line="-Xrunjmp"/>
		</java>
	</target>

	
</project>
